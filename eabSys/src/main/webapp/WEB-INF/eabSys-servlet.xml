<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

 <!-- xmlns:task="http://www.springframework.org/schema/task"  这个内容是20160606 xh添加    定时任务使用 -->
 <!--  http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd-20160606xh添加    定时任务使用 -->
	<!-- SpringMvc 注解的自动配置 -->
	<context:annotation-config />
	<context:component-scan base-package="com.eastpro.web.controller" use-default-filters="false" >
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/> 
	</context:component-scan>	
	
	
	<task:annotation-driven/>
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>	
	<context:component-scan base-package="com/eastpro/batch/task"></context:component-scan> 
	
	<!-- mvc:annotation-driven 会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter
        两个bean,是spring MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson） -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"><!-- JSON的支持 -->
                <property name="prettyPrint" value="true"/>
            </bean>		
  		</mvc:message-converters>  		
	</mvc:annotation-driven>
	
	
	<!-- 配置使用什么类型文件作为前台展示, 这里配置为JSP -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/web/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置资源文件[Start] -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 国际化信息所在的文件名 -->
        <property name="basename" value="classpath:messages" />
        <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->
        <property name="useCodeAsDefaultMessage" value="true" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<!-- 配置资源文件[End] -->
	
	<!-- 引入json[s] -->
	<!--
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <ref bean="mappingJacksonHttpMessageConverter" />
	        </list>
	    </property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	<property name="supportedMediaTypes">
		<list>
			<value>text/html;charset=UTF-8</value>
		</list>
	</property>
	</bean>
	-->
	<!-- 引入json[e] -->

	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->	
	<mvc:default-servlet-handler/>
	
	<!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
		<property name="exceptionMappings">  
			<props>  
				<prop key="java.lang.Throwable">error/500</prop>
            </props>  
		</property>  
    </bean>
	
</beans>